Param(
  [string]$RemoteUrl = ""
)

$ErrorActionPreference = "Stop"

if (-not (Test-Path ".git")) {
  Write-Host "No git repo found. Initializing..."
  git init | Out-Null
}

New-Item -ItemType Directory -Force -Path ".github" | Out-Null
New-Item -ItemType Directory -Force -Path "scripts" | Out-Null

@"
*                                   @VictorKVS
src/mf_core/api/**                  @backend-team
src/mf_core/agents/**               @ml-team
src/mf_core/agents/onec_adapter/**  @backend-team @ml-team
src/mf_core/agents/legislation/**   @ml-team
src/mf_core/agents/risks/**         @ml-team
src/mf_core/agents/control/**       @backend-team
src/mf_core/agents/documents/**     @ml-team
src/mf_core/rag/**                  @ml-team @backend-team
src/mf_core/llm/**                  @ml-team
src/mf_core/vector_store/**         @ml-team @backend-team
src/mf_core/db/**                   @backend-team
src/mf_core/telemetry/**            @backend-team @devops-team
deploy/**                           @devops-team
scripts/**                          @devops-team
tests/**                            @qa-team @backend-team @ml-team
"@ | Out-File -Encoding utf8 ".github/CODEOWNERS"

@"
# üìù –û–ø–∏—Å–∞–Ω–∏–µ / Description
–ö—Ä–∞—Ç–∫–æ: —á—Ç–æ –∏ –∑–∞—á–µ–º –º–µ–Ω—è–µ–º? / Briefly: what & why?

- –¢–∏–ø / Type: feat / fix / refactor / docs / chore
- –û–±–ª–∞—Å—Ç—å / Area: api / agents / db / rag / llm / vector_store / telemetry / infra / tests

–°–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ / Linked issues:
- Closes #ISSUE_ID
- Related #ISSUE_ID

## ‚úÖ –ß–µ–∫-–ª–∏—Å—Ç / Checklist
- [ ] –¢–µ—Å—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã/–æ–±–Ω–æ–≤–ª–µ–Ω—ã ‚Äî Tests added/updated
- [ ] –õ–∏–Ω—Ç–µ—Ä—ã/—Ç–∏–ø—ã –ø—Ä–æ–π–¥–µ–Ω—ã ‚Äî Linters/typing pass (black, ruff, mypy)
- [ ] –ú–∏–≥—Ä–∞—Ü–∏–∏ –ë–î (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ) ‚Äî DB migrations (if needed)
- [ ] –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ ‚Äî Docs updated
- [ ] –ù–µ—Ç —Å–µ–∫—Ä–µ—Ç–æ–≤/–ü–î–Ω –≤ –∫–æ–¥–µ ‚Äî No secrets/PII in code
- [ ] –ù–µ—Ç —Ä–µ–≥—Ä–µ—Å—Å–∞ –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ ‚Äî No perf regress
- [ ] –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å API —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ ‚Äî API compatibility OK

## üîÑ –ü–ª–∞–Ω —Ä–∞—Å–∫–∞—Ç–∫–∏ / Rollout
- [ ] –ë–µ–∑ –¥–∞—É–Ω—Ç–∞–π–º–∞ / No downtime
- [ ] –ú–∏–≥—Ä–∞—Ü–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã / Safe migrations
- [ ] –û–±–Ω–æ–≤–ª–µ–Ω—ã –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–µ–ø–ª–æ—è / Deploy docs updated

## üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç—ã / Screens (opt.)
## üß™ –ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å / How to test
"@ | Out-File -Encoding utf8 ".github/pull_request_template.md"

if (-not (Test-Path ".gitattributes")) {
@"
* text=auto eol=lf
*.png binary
*.jpg binary
*.jpeg binary
*.gif binary
*.pdf binary
*.doc binary
*.docx binary
*.xls binary
*.xlsx binary
*.md  linguist-detectable=true
*.yml linguist-detectable=true
*.yaml linguist-detectable=true
*.json linguist-detectable=true
"@ | Out-File -Encoding utf8 ".gitattributes"
}

git add .github/CODEOWNERS .github/pull_request_template.md .gitattributes | Out-Null
if (-not (git diff --cached --quiet)) {
  git commit -m "chore(repo): add CODEOWNERS, PR template (RU+EN), .gitattributes" | Out-Null
}

$main = "main"
$develop = "develop"
$current = (git rev-parse --abbrev-ref HEAD).Trim()
if ($current -ne $main) {
  git branch -M $main | Out-Null
}

if ($RemoteUrl -ne "") {
  if (-not (git remote | Select-String -Quiet "^origin$")) {
    git remote add origin $RemoteUrl | Out-Null
  }
  git push -u origin $main
  git checkout -B $develop
  git push -u origin $develop
}

Write-Host "‚úÖ Done. Files created and committed."
